@page "/dashboard"
@attribute [Authorize]

@using Blazored.LocalStorage
@using System.Security.Claims
@using teste.Domain.Models
@using teste.Application.Interfaces
@using teste.App.Security

@inject CustomAuthProvider CustomAuth
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation
@inject IAccountService AccountService

<RadzenButton Click="showFormProduct">Cadastrar Produto</RadzenButton>
<RadzenButton Click="showListUser">Lista de Usuários</RadzenButton>

@if(showUserList){
    <RadzenDataGrid PageSize="5" AllowPaging="true" AllowSorting="true" Data="@Users" ColumnWidth="400px">
        <Columns>
            <RadzenDataGridColumn Property="Username" Title="Username" Width="150px" />
            <RadzenDataGridColumn Property="Email" Title="Email" Width="250px" />
            <RadzenDataGridColumn Title="Role" Width="250px">
                <Template Context="user">
                    @user.Roles.ToString()
                </Template>
            </RadzenDataGridColumn>

        </Columns>
    </RadzenDataGrid>
}
@if(showProductForm){
    <RadzenRow AlignItems="AlignItems.End" Wrap="FlexWrap.Wrap" Gap="1rem" class="rz-p-sm-12">
        <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
            <RadzenFormField Text="Outlined/Default" Style="width: 100%;">
                <RadzenTextBox @bind-Value="@value" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
            <RadzenFormField Text="Text" Variant="Variant.Text" Style="width: 100%;">
                <RadzenTextBox @bind-Value="@value" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
            <RadzenFormField Text="Flat" Variant="Variant.Flat" Style="width: 100%;">
                <RadzenTextBox @bind-Value="@value" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="6" SizeLG="3">
            <RadzenFormField Text="Filled" Variant="Variant.Filled" Style="width: 100%;">
                <RadzenTextBox @bind-Value="@value" />
            </RadzenFormField>
        </RadzenColumn>
    </RadzenRow>
}

<RadzenButton Click="CustomAuth.Logout">Logout</RadzenButton>

@code {
    private List<User> Users = new();
    private bool showUserList = false;
    private bool showProductForm = false;
    private string value = "";

    protected override async Task OnInitializedAsync()
    {
         Users = await AccountService.GetAllUsersAsync();

    }

    private void showListUser(){
        showUserList = !showUserList;
    }

    private void showFormProduct(){
        showProductForm = !showProductForm;
    }
}
