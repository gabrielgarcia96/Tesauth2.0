@page "/dashboard"
@attribute [Authorize]

@using Blazored.LocalStorage
@using System.Security.Claims
@using teste.Domain.Models
@using teste.Application.Interfaces
@using teste.App.Security

@inject CustomAuthProvider CustomAuth
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation
@inject Radzen.NotificationService notification
@inject IAccountService AccountService

<RadzenButton Click="showListUser" style="margin-right: 12px; padding: 10px 20px; background-color: #28a745; color: white; border: none; border-radius: 4px; cursor: pointer; transition: background-color 0.3s;"
              HoverStyle="background-color: #218838;">Lista de Usuários</RadzenButton>


@if (showUserList)
{
    <br />
    <RadzenDataGrid PageSize="5" AllowPaging="true" AllowSorting="true" Data="@Users" ColumnWidth="400px">
        <Columns>
            <RadzenDataGridColumn Property="Username" Title="Username" Width="150px" />
            <RadzenDataGridColumn Property="Email" Title="Email" Width="250px" />
            <RadzenDataGridColumn Title="Role" Width="250px">
                <Template Context="user">
                    @user.Roles.ToString()
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

<RadzenButton Click="CustomAuth.Logout" style="margin-top: 12px; padding: 10px 20px; background-color: #dc3545; color: white; border: none; border-radius: 4px; cursor: pointer; transition: background-color 0.3s;"
HoverStyle="background-color: #c82333;">Logout</RadzenButton>

@code {

    private List<User> Users = new();
    
    private bool showUserList = false;
    

    private string value = "";

    protected override async Task OnInitializedAsync()
    {
        await CustomAuth.InitializeAuthState();
        Users = await AccountService.GetAllUsersAsync();
    }

    private void showListUser()
    {
        showUserList = !showUserList;
    }

    
}
